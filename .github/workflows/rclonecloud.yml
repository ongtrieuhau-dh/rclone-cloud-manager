name: rclonecloud

on:
  workflow_dispatch:
    inputs:
      command:
        description: "Select the rclone command to run"
        required: true
        default: "about"
        type: choice
        options:
          - "about"
          - "bisync"
          - "copy"
          - "copyto"
          - "copyurl"
          - "delete"
          - "deletefile"
          - "hashsum"
          - "link"
          - "listremotes"
          - "ls"
          - "lsd"
          - "lsf"
          - "lsjson"
          - "lsl"
          - "mkdir"
          - "mount"
          - "move"
          - "moveto"
          - "rmdir"
          - "rmdirs"
          - "selfupdate"
          - "size"
          - "sync"
          - "test"
          - "touch"
          - "tree"
          - "version"
      remotesource:
        description: "Select remote source"
        default: ""
        type: choice
        options:
          - ""
          - "onedrive-phoai@students.solano.edu"
          - "onedrive-ongtrieuhau861@23t5wj.onmicrosoft.com"
      remotesourcepath:
        description: "Remote source path"
      remotedest:
        description: "Select remote dest"
        default: ""
        type: choice
        options:
          - ""
          - "onedrive-phoai@students.solano.edu"
          - "onedrive-ongtrieuhau861@23t5wj.onmicrosoft.com"
      remotedestpath:
        description: "Remote dest path"
      flags:
        description: "Set flags: --dry-run "
      toartifact:
        description: "Select to Artifact"
        default: ""
        type: choice
        options:
          - ""
          - " > ./.artifact/output.json"
          - " > ./.artifact/output.txt"
      flagslogfile:
        description: "Select flags --log-file"
        default: ""
        type: choice
        options:
          - ""
          - "--log-file ./.artifact/DEBUG.log"
      flagsloglevel:
        description: "Select flags --log-level"
        default: ""
        type: choice
        options:
          - ""
          - "--log-level DEBUG"
jobs:
  rclonecloud:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize jobs
        run: |
          mkdir -p ./.artifact
          TZ='Asia/Bangkok' date +'%Y%m%d-%H%M' > date.txt
          echo "NOWDATE=$(cat date.txt)" >> $GITHUB_ENV
          echo "github.event.inputs.remotesource: ${{ github.event.inputs.remotesource }}"
          echo "github.event.inputs.remotesourcepath: ${{ github.event.inputs.remotesourcepath }}"
          echo "github.event.inputs.remotedest: ${{ github.event.inputs.remotedest }}"
          echo "github.event.inputs.remotedestpath: ${{ github.event.inputs.remotedestpath }}"
          echo "github.event.inputs.flags: ${{ github.event.inputs.flags }}"
          echo "github.event.inputs.toartifact: ${{ github.event.inputs.toartifact }}"
          echo "github.event.inputs.flagslogfile: ${{ github.event.inputs.flagslogfile }}"
          echo "github.event.inputs.flagsloglevel: ${{ github.event.inputs.flagsloglevel }}"

      - name: Check Initialize jobs
        run: |
          echo "The date variable is $NOWDATE"
          echo "env.NOWDATE is ${{ env.NOWDATE }}"

      - name: Install rclone offline
        run: |
          sudo cp ./bin/rclone /usr/bin/
          sudo chmod +x /usr/bin/rclone
          rclone version

      - name: Decode and configure rclone from secrets
        run: |
          mkdir -p ~/.config/rclone
          echo "${{ secrets.RCLONE_CONF_BASE64 }}" | base64 --decode > ~/.config/rclone/rclone.conf

      - name: Run ${{ github.event.inputs.command }}
        run: |
          argBuilder="${{ github.event.inputs.command }}"
          if [[ -n "${{ github.event.inputs.remotesource }}" ]]; then
            argBuilder="$argBuilder ${{ github.event.inputs.remotesource }}:"
            echo "$argBuilder"
          fi
          if [[ -n "${{ github.event.inputs.remotesourcepath }}" ]]; then
            argBuilder="$argBuilder${{ github.event.inputs.remotesourcepath }}"
            echo "$argBuilder"
          fi
          if [[ -n "${{ github.event.inputs.remotedest }}" ]]; then
            argBuilder="$argBuilder ${{ github.event.inputs.remotedest }}:"
            echo "$argBuilder"
          fi
          if [[ -n "${{ github.event.inputs.remotedestpath }}" ]]; then
            argBuilder="$argBuilder${{ github.event.inputs.remotedestpath }}"
            echo "$argBuilder"
          fi
          if [[ -n "${{ github.event.inputs.flags }}" ]]; then
            argBuilder="$argBuilder ${{ github.event.inputs.flags }}"
            echo "$argBuilder"
          fi
          if [[ -n "${{ github.event.inputs.toartifact }}" ]]; then
            argBuilder="$argBuilder ${{ github.event.inputs.toartifact }}"
            echo "$argBuilder"
          fi
          if [[ -n "${{ github.event.inputs.flagslogfile }}" ]]; then
            argBuilder="$argBuilder ${{ github.event.inputs.flagslogfile }}"
            echo "$argBuilder"
          fi
          if [[ -n "${{ github.event.inputs.flagsloglevel }}" ]]; then
            argBuilder="$argBuilder ${{ github.event.inputs.flagsloglevel }}"
            echo "$argBuilder"
          fi
          echo "[argBuilder] ==> $argBuilder"
          rclone $argBuilder

      - name: "Upload Artifact"
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: rclonecloud-artifact-${{ env.NOWDATE }}-${{ github.run_id }}
          path: ./.artifact
          retention-days: 5
